---
const { title, animes } = Astro.props;

---
<div class="relative w-full">
 
  <!-- Encabezado y botones de navegación -->
  <div class="flex justify-between items-center mb-4">
    <h2 class="text-2xl font-bold">{title}</h2>
    <div class="flex space-x-2">
      <!-- Botón para deslizar a la izquierda -->
      <button
        class="bg-blue-600 rounded-full z-10 hover:bg-gray-600 focus:outline-none"
        id="prevButton"
      >
        <svg class="w-6 h-6 text-white dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m15 19-7-7 7-7"/>
        </svg>
      </button>

      <!-- Botón para deslizar a la derecha -->
      <button
        class="bg-blue-600 rounded-full z-10 hover:bg-gray-600 focus:outline-none"
        id="nextButton"
      >
        <svg class="w-6 h-6 text-white dark:text-white" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="none" viewBox="0 0 24 24">
          <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m9 5 7 7-7 7"/>
        </svg>
      </button>
    </div>
  </div>

  <!-- Carrusel -->
  <div id="carousel" class="flex space-x-2 overflow-x-hidden py-2">
    {animes.map((anime: { image: string | null | undefined; title: unknown; score: unknown; id:unknown }, index: any) => (
      <Fragment key={index}>
        <div class="flex-none w-40 relative">
          <a href={`/anime/${anime.id}`}> 
          <img
            src={anime.image}
            alt={anime.title as string}
            class="w-full h-auto rounded-md shadow-md transition-transform duration-300 hover:scale-105"
          />
          </a>
          <h3 class="absolute bottom-1 left-1 text-white text-sm font-medium bg-black bg-opacity-75 px-1 py-0.5 rounded">
            {anime.title}
          </h3>
          <span class="absolute top-1 right-1 text-white text-sm font-medium bg-black bg-opacity-75 px-1 py-0.5 rounded">
            {anime.score} ⭐
          </span>
        </div>
      </Fragment>
    ))}
  </div>
</div>
 

<script>
    const carousel = document.getElementById('carousel');
    const prevButton = document.getElementById('prevButton');
    const nextButton = document.getElementById('nextButton');
    const scrollAmount = 200; // Ajusta la cantidad de desplazamiento

    // Desliza a la izquierda
    if (prevButton) {
      prevButton.addEventListener('click', () => {
      if (carousel) {
        carousel.scrollBy({
          left: -scrollAmount,
          behavior: 'smooth',
        });
      }
    });
    if (nextButton) {
      nextButton.addEventListener('click', () => {
        // Desliza a la derecha
        if (carousel) {
          carousel.scrollBy({
            left: scrollAmount,
            behavior: 'smooth',
          });
        }
      });
    }
  }
</script>

